#  ASCII Art Character Set - Unicode Box Drawing Style
#  Format: Each character is 6 lines tall, prefixed with 
import tkinter as tk
from tkinter import ttk, scrolledtext
import json
import os

ASCII_CHARS = {
    'A': [
        "  ██████╗",
        " ██╔══██╗",
        " ███████║",
        " ██╔══██║",
        " ██║  ██║",
        " ╚═╝  ╚═╝"
    ],
    
    'B': [
        " ██████╗ ",
        " ██╔══██╗",
        " ██████╔╝",
        " ██╔══██╗",
        " ██████╔╝",
        " ╚═════╝ "
    ],
    
    'C': [
        "  ██████╗",
        " ██╔════╝",
        " ██║     ",
        " ██║     ",
        " ╚██████╗",
        "  ╚═════╝"
    ],
    
    'D': [
        " ██████╗ ",
        " ██╔══██╗",
        " ██║  ██║",
        " ██║  ██║",
        " ██████╔╝",
        " ╚═════╝ "
    ],
    
    'E': [
        " ███████╗",
        " ██╔════╝",
        " █████╗  ",
        " ██╔══╝  ",
        " ███████╗",
        " ╚══════╝"
    ],
    
    'F': [
        " ███████╗",
        " ██╔════╝",
        " █████╗  ",
        " ██╔══╝  ",
        " ██║     ",
        " ╚═╝     "
    ],
    
    'G': [
        "  ██████╗ ",
        " ██╔════╝ ",
        " ██║  ███╗",
        " ██║   ██║",
        " ╚██████╔╝",
        "  ╚═════╝ "
    ],
    
    'H': [
        " ██╗  ██╗",
        " ██║  ██║",
        " ███████║",
        " ██╔══██║",
        " ██║  ██║",
        " ╚═╝  ╚═╝"
    ],
    
    'I': [
        " ██╗",
        " ██║",
        " ██║",
        " ██║",
        " ██║",
        " ╚═╝"
    ],
    
    'J': [
        "      ██╗",
        "      ██║",
        "      ██║",
        " ██   ██║",
        " ╚█████╔╝",
        "  ╚════╝ "
    ],
    
    'K': [
        " ██╗  ██╗",
        " ██║ ██╔╝",
        " █████╔╝ ",
        " ██╔═██╗ ",
        " ██║  ██╗",
        " ╚═╝  ╚═╝"
    ],
    
    'L': [
        " ██╗     ",
        " ██║     ",
        " ██║     ",
        " ██║     ",
        " ███████╗",
        " ╚══════╝"
    ],
    
    'M': [
        " ███╗   ███╗",
        " ████╗ ████║",
        " ██╔████╔██║",
        " ██║╚██╔╝██║",
        " ██║ ╚═╝ ██║",
        " ╚═╝     ╚═╝"
    ],
    
    'N': [
        " ███╗   ██╗",
        " ████╗  ██║",
        " ██╔██╗ ██║",
        " ██║╚██╗██║",
        " ██║ ╚████║",
        " ╚═╝  ╚═══╝"
    ],
    
    'O': [
        "  ██████╗ ",
        " ██╔═══██╗",
        " ██║   ██║",
        " ██║   ██║",
        " ╚██████╔╝",
        "  ╚═════╝ "
    ],
    
    'P': [
        " ██████╗ ",
        " ██╔══██╗",
        " ██████╔╝",
        " ██╔═══╝ ",
        " ██║     ",
        " ╚═╝     "
    ],
    
    'Q': [
        "  ██████╗ ",
        " ██╔═══██╗",
        " ██║   ██║",
        " ██║▄▄ ██║",
        " ╚██████╔╝",
        "  ╚══▀▀═╝ "
    ],
    
    'R': [
        " ██████╗ ",
        " ██╔══██╗",
        " ██████╔╝",
        " ██╔══██╗",
        " ██║  ██║",
        " ╚═╝  ╚═╝"
    ],
    
    'S': [
        " ███████╗",
        " ██╔════╝",
        " ███████╗",
        " ╚════██║",
        " ███████║",
        " ╚══════╝"
    ],
    
    'T': [
        " ████████╗",
        " ╚══██╔══╝",
        "    ██║   ",
        "    ██║   ",
        "    ██║   ",
        "    ╚═╝   "
    ],
    
    'U': [
        " ██╗   ██╗",
        " ██║   ██║",
        " ██║   ██║",
        " ██║   ██║",
        " ╚██████╔╝",
        "  ╚═════╝ "
    ],
    
    'V': [
        " ██╗   ██╗",
        " ██║   ██║",
        " ██║   ██║",
        " ╚██╗ ██╔╝",
        "  ╚████╔╝ ",
        "   ╚═══╝  "
    ],
    
    'W': [
        " ██╗    ██╗",
        " ██║    ██║",
        " ██║ █╗ ██║",
        " ██║███╗██║",
        " ╚███╔███╔╝",
        "  ╚══╝╚══╝ "
    ],
    
    'X': [
        " ██╗  ██╗",
        " ╚██╗██╔╝",
        "  ╚███╔╝ ",
        "  ██╔██╗ ",
        " ██╔╝ ██╗",
        " ╚═╝  ╚═╝"
    ],
    
    'Y': [
        " ██╗   ██╗",
        " ╚██╗ ██╔╝",
        "  ╚████╔╝ ",
        "   ╚██╔╝  ",
        "    ██║   ",
        "    ╚═╝   "
    ],
    
    'Z': [
        " ███████╗",
        " ╚══███╔╝",
        "   ███╔╝ ",
        "  ███╔╝  ",
        " ███████╗",
        " ╚══════╝"
    ],

    'a': [
        "        ",
        "  ▄▄▄   ",
        " ▀▀▀██╗ ",
        " ▄█  ██║",
        " ╚▀▀▀▀▀╝",
        "        "
    ],
    
    'b': [
        " ██╗     ",
        " ██║     ",
        " ██████╗ ",
        " ██╔══██╗",
        " ██████╔╝",
        " ╚═════╝ "
    ],
    
    'c': [
        "        ",
        "  ▄▄▄   ",
        " ██╔══╝ ",
        " ╚█████╗",
        "  ╚════╝",
        "        "
    ],
    
    'd': [
        "     ██╗ ",
        "     ██║ ",
        " ▄██████║",
        " ██╔══██║",
        " ╚██████║",
        "  ╚═════╝"
    ],
    
    'e': [
        "       ",
        "  ▄▄▄  ",
        " █▄▄▄█╗",
        " ██╔══╝",
        " ╚████╗",
        "  ╚═══╝"
    ],
    
    'f': [
        "  ▄██╗",
        " ██╔═╝",
        " ████╗",
        " ██╔═╝",
        " ██║  ",
        " ╚═╝  "
    ],
    
    'g': [
        "         ",
        "  ▄███╗  ",
        " ██╔══██╗",
        " ╚██████║",
        "  ╚═══██║",
        " ██████╔╝"
    ],
    
    'h': [
        " ██╗     ",
        " ██║     ",
        " ██████╗ ",
        " ██╔══██╗",
        " ██║  ██║",
        " ╚═╝  ╚═╝"
    ],
    
    'i': [
        " ██╗",
        " ╚═╝",
        " ██╗",
        " ██║",
        " ██║",
        " ╚═╝"
    ],
    
    'j': [
        "   ██╗",
        "   ╚═╝",
        "   ██╗",
        "   ██║",
        "   ██║",
        " ██╔═╝"
    ],
    
    'k': [
        " ██╗   ",
        " ██║   ",
        " ██╔██╗",
        " ████╔╝",
        " ██╔██╗",
        " ╚═╝╚═╝"
    ],
    
    'l': [
        " ██╗",
        " ██║",
        " ██║",
        " ██║",
        " ██║",
        " ╚═╝"
    ],
    
    'm': [
        "           ",
        " ████████╗ ",
        " ██╔██╔██║ ",
        " ██║██║██║ ",
        " ██║██║██║ ",
        " ╚═╝╚═╝╚═╝ "
    ],
    
    'n': [
        "         ",
        " █████╗  ",
        " ██╔══██╗",
        " ██║  ██║",
        " ██║  ██║",
        " ╚═╝  ╚═╝"
    ],
    
    'o': [
        "         ",
        "  ▄███╗  ",
        " ██╔══██╗",
        " ██║  ██║",
        " ╚█████╔╝",
        "  ╚════╝ "
    ],
    
    'p': [
        "         ",
        " █████╗  ",
        " ██╔══██╗",
        " ██████╔╝",
        " ██╔═══╝ ",
        " ██║     "
    ],
    
    'q': [
        "         ",
        "  ▄███╗  ",
        " ██╔══██╗",
        " ╚██████║",
        "  ╚══██║ ",
        "      ██║ "
    ],
    
    'r': [
        "      ",
        " ████╗",
        " ██╔═╝",
        " ██║  ",
        " ██║  ",
        " ╚═╝  "
    ],
    
    's': [
        "        ",
        "  ▄███╗ ",
        " ██╔══╝ ",
        " ╚████╗ ",
        " ╚═══██║",
        " █████╔╝"
    ],
    
    't': [
        "      ",
        "  ██╗ ",
        " ████╗",
        "  █║  ",
        " ╚██╗ ",
        "  ╚═╝ "
    ],
    
    'u': [
        "        ",
        " ██╗ ██╗",
        " ██║ ██║",
        " ██║ ██║",
        " ╚████╔╝",
        "  ╚═══╝ "
    ],
    
    'v': [
        "          ",
        " ██╗   ██╗",
        " ██║   ██║",
        " ╚██╗ ██╔╝",
        "  ╚███╔╝  ",
        "   ╚══╝   "
    ],
    
    'w': [
        "          ",
        " ██╗  ██╗ ",
        " ██║ ███║ ",
        " ██║████║ ",
        " ╚██╔██╔╝ ",
        "  ╚═╝╚═╝  "
    ],
    
    'x': [
        "         ",
        " ██╗ ██╗ ",
        " ╚██╗██╔╝",
        "  ╚███╔╝ ",
        " ██╔  ██╗ ",
        " ╚═╝  ╚═╝ "
    ],
    
    'y': [
        "         ",
        " ██╗ ██╗ ",
        " ██║ ██║ ",
        " ╚████╔╝ ",
        "  ╚═██╔╝ ",
        " ██████╔╝"
    ],
    
    'z': [
        "         ",
        " ██████╗ ",
        " ╚════██╗",
        "  ▄███╔╝ ",
        " ██████╔╝",
        " ╚═════╝ "
    ],
    
    '0': [
        "  ██████╗ ",
        " ██╔═████╗",
        " ██║██╔██║",
        " ████╔╝██║",
        " ╚██████╔╝",
        "  ╚═════╝ "
    ],
    
    '1': [
        "  ██╗",
        " ███║",
        " ╚██║",
        "  ██║",
        "  ██║",
        "  ╚═╝"
    ],
    
    '2': [
        " ██████╗ ",
        " ╚════██╗",
        "  █████╔╝",
        " ██╔═══╝ ",
        " ███████╗",
        " ╚══════╝"
    ],
    
    '3': [
        " ██████╗ ",
        " ╚════██╗",
        "  █████╔╝",
        "  ╚═══██╗",
        " ██████╔╝",
        " ╚═════╝ "
    ],
    
    '4': [
        " ██╗  ██╗",
        " ██║  ██║",
        " ███████║",
        " ╚════██║",
        "      ██║",
        "      ╚═╝"
    ],
    
    '5': [
        " ███████╗",
        " ██╔════╝",
        " ███████╗",
        " ╚════██║",
        " ███████║",
        " ╚══════╝"
    ],
    
    '6': [
        "  ██████╗ ",
        " ██╔════╝ ",
        " ██████╗  ",
        " ██╔══██╗ ",
        " ╚██████╔╝",
        "  ╚═════╝ "
    ],
    
    '7': [
        " ███████╗",
        " ╚════██║",
        "     ██╔╝",
        "    ██╔╝ ",
        "   ██╔╝  ",
        "   ╚═╝   "
    ],
    
    '8': [
        "  █████╗ ",
        " ██╔══██╗",
        " ╚█████╔╝",
        " ██╔══██╗",
        " ╚█████╔╝",
        "  ╚════╝ "
    ],
    
    '9': [
        "  █████╗ ",
        " ██╔══██╗",
        " ╚██████║",
        "  ╚═══██║",
        "  █████╔╝",
        "  ╚════╝ "
    ],

    ' ': [
        "    ",
        "    ",
        "    ",
        "    ",
        "    ",
        "    "
    ],
    
    '.': [
        "    ",
        "    ",
        "    ",
        "    ",
        " ██╗",
        " ╚═╝"
    ],
    
    '!': [
        " ██╗",
        " ██║",
        " ██║",
        " ╚═╝",
        " ██╗",
        " ╚═╝"
    ],
    
    '?': [
        " ██████╗ ",
        " ╚════██╗",
        "   ▄███╔╝",
        "   ▀▀══╝ ",
        "   ██╗   ",
        "   ╚═╝   "
    ],
    
    ':': [
        "    ",
        " ██╗",
        " ╚═╝",
        " ██╗",
        " ╚═╝",
        "    "
    ],
    
    '_': [
        "         ",
        "         ",
        "         ",
        "         ",
        " ███████╗",
        " ╚══════╝"
    ],

    '*': [
        " ▄ ▄ ▄  ",
        " ▄███▄╗ ",
        " ▄▀█▀▄╝ ",
        "        ",
        "        ",
        "        "
    ],
    '\'': [
        " ██╗ ",
        " ██║ ",
        " ╚═╝ ",
        "     ",
        "     ",
        "     "
    ],
    '@': [
        "  ▄████▄╗ ",
        " ██   ▄█║ ",
        " ██ ██▀█║ ",
        " ██ ▀▄▄█║ ",
        "  ▀████▀╝ ",
        "    ╚══╝  "
    ],
    '\\': [
        "██       ",
        " ╚██╗    ",
        "   ╚██╗  ",
        "     ╚██╗",
        "       ██",
        "        "
    ],
    '+': [
        "        ",
        "   ██╗  ",
        " ██████ ",
        "   ██║  ",
        "   ╚═╝  ",
        "        "
    ],
    '-': [
        "         ",
        "         ",
        " ██████╗ ",
        "  ╚════╝ ",
        "         ",
        "         "
    ],
    '=': [
        "         ",
        " ██████╗ ",
        "  ╚════╝ ",
        " ██████╗ ",
        "  ╚════╝ ",
        "         "
    ],
    '^': [
        "   ██╗   ",
        "  █╝╚█╗  ",
        " █╝  ╚█╗ ",
        "      ╚╝ ",
        "         ",
        "         "
    ],
    '~': [
        "         ",
        "  ▄▄╗    ",
        " █  █║ █╗",
        "     ▀▀╚╝",
        "         ",
        "         "
    ],
    '|': [
        " ██╗  ",
        " ██║  ",
        " ██║  ",
        " ██║  ",
        " ██║  ",
        " ╚═╝  "
    ],
    '/': [
        "     ╔██ ",
        "    ╔██╝ ",
        "  ╔██╝   ",
        " ╔██╝    ",
        "╔██╝     ",
        "         "
    ],
    ',': [
        "      ",
        "      ",
        "      ",
        "  ██╗ ",
        "  ██║ ",
        " ██╝  "
    ],
    ';': [
        "       ",
        "   ██╗ ",
        "   ╚═╝ ",
        "   ██╗ ",
        "  ██╝  ",
        " ██╝   "
    ],
    '(': [
        "    ██╗",
        "  ██╝  ",
        " ██    ",
        " ██╗   ",
        "  ██╗  ",
        "    ██╝"
    ],
    ')': [
        " ██╗   ",
        "   ██╗ ",
        "    ██╗",
        "    ██╝",
        "   ██╝ ",
        " ██╝   "
    ],
    '[': [
        " ████╗ ",
        " ██ ═╝ ",
        " ██║   ",
        " ██║   ",
        " ██║   ",
        " ████╗ "
    ],
    ']': [
        "   ████╗ ",
        "     ██║ ",
        "     ██║ ",
        "     ██║ ",
        "     ██║ ",
        "   ████╝ "
    ],
    '{': [
        "    ███╗",
        "   ██╝  ",
        " ███    ",
        "   ██╗  ",
        "    ███╗",
        "    ╚══╝"
    ],
    '}': [
        "  ███╗   ",
        "    ██╗  ",
        "     ███ ",
        "    ██╝  ",
        "  ███╝   ",
        "         "
    ],
    '"': [
        " ██╗██╗  ",
        " ██║██║  ",
        " ╚═╝╚═╝  ",
        "         ",
        "         ",
        "         "
    ],
    '…': [
        "         ",
        "         ",
        "         ",
        " █╗ █╗ █╗",
        " ╚╝ ╚╝ ╚╝",
        "         "
    ],
  }


class AsciiArtGenerator(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("ASCII Art Generator")
        self.geometry("750x300")

        input_frame = ttk.Frame(self)
        input_frame.pack(fill="x", pady=(10,0), padx=10)
        ttk.Label(input_frame, text="Input Text:").pack(side="left")
        self.input_var = tk.StringVar()
        self.input_entry = ttk.Entry(input_frame, textvariable=self.input_var, width=78)
        self.input_entry.pack(side="left", padx=(5,0))

        # Controls row - all widgets tightly packed in the same frame
        pre_suf_fix = 20

        control_frame = ttk.Frame(self)
        control_frame.pack(fill="x", pady=(10,0), padx=10)
        ttk.Label(control_frame, text="Prefix:").pack(side="left")
        self.prefix_var = tk.StringVar(value="#")
        self.prefix_entry = ttk.Entry(control_frame, textvariable=self.prefix_var, width=pre_suf_fix)
        self.prefix_entry.pack(side="left", padx=(2,5))

        ttk.Label(control_frame, text="Suffix:").pack(side="left")
        self.suffix_var = tk.StringVar(value="")
        self.suffix_entry = ttk.Entry(control_frame, textvariable=self.suffix_var, width=pre_suf_fix)
        self.suffix_entry.pack(side="left", padx=(2,5))

        self.generate_button = ttk.Button(control_frame, text="Generate ASCII Art", command=self.generate_ascii_art)
        self.generate_button.pack(side="left", padx=2)

        # Output label and display
        ttk.Label(self, text="Output ASCII Art:").pack(anchor="w", padx=15, pady=(15,5))
        self.output_text = scrolledtext.ScrolledText(self, height=8, width=60, font=("Courier", 11))
        self.output_text.pack(fill="both", expand = True, padx=10, pady=5)

    # Inside __init__, after creating self.generate_button
        self.copy_button = ttk.Button(control_frame, text="Copy to Clipboard", command=self.copy_to_clipboard)
        self.copy_button.pack(side="left", padx=2)

    # Define the method
    def copy_to_clipboard(self):
        ascii_text = self.output_text.get("1.0", "end-1c")  # get all text except trailing newline
        if ascii_text:
            self.clipboard_clear()
            self.clipboard_append(ascii_text)

    def generate_ascii_art(self):
        input_text = self.input_var.get()  # Use StringVar associated with Entry
        prefix = self.prefix_var.get()
        suffix = self.suffix_var.get()
        if not input_text.strip():
            self.output_text.delete("1.0", "end")
            return

        ascii_art = self.get_ascii_art(input_text, prefix, suffix)
        self.output_text.delete("1.0", "end")
        self.output_text.insert("end", ascii_art)

    def get_ascii_art(self, text, prefix="# ", suffix=""):
        lines = ["" for _ in range(6)]
        for char in text:
            if char in ASCII_CHARS:
                char_lines = ASCII_CHARS[char]
                for i in range(6):
                    lines[i] += char_lines[i] + " "
            else:
                char_lines = ASCII_CHARS[' ']
                for i in range(6):
                    lines[i] += char_lines[i] + " "
        prefixed_suffixed_lines = [prefix + line + suffix for line in lines]
        return "\n".join(prefixed_suffixed_lines)

if __name__ == "__main__":
    app = AsciiArtGenerator()
    app.mainloop()